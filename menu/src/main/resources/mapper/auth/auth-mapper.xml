<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="auth">
	
	<resultMap id="UserResult" type="com.kh.menu.security.model.dto.AuthDto$User" autoMapping="true">
        <id property="id" column="ID" />
        <collection property="roles" ofType="java.lang.String">
            <result column="AUTHORITY"/>
        </collection>
    </resultMap>
    <!-- 1. 로그인시 사용하는 함수 -->
    <select id="findUserByEmail" resultMap="UserResult">
        SELECT id, email, name, profile, password, authority
        FROM USERS U
        LEFT JOIN USER_CREDENTIALS UC ON U.ID = UC.USER_ID
        JOIN USER_AUTHORITY UA ON U.ID = UA.USER_ID
        WHERE UPPER(EMAIL) = UPPER(#{email})
    </select>
    <!-- 자동 회원가입 코드 (USERS, CRED, AUTH) -->
    <insert id="insertUser">
    	<selectKey keyProperty="id" resultType="long" order="BEFORE">
    		SELECT SQE_USERS_ID.NEXTVAL FROM DUAL
    	</selectKey>
    	INSERT INTO USERS(ID, EMAIL, NAME, PROFILE)
    	VALUES(#{id},#{email},#{name},#{profile})
    </insert>
    <insert id="insertCred">
        INSERT INTO USER_CREDENTIALS (USER_ID, PASSWORD)
        VALUES (#{userId}, #{password})
    </insert>
    <insert id="insertUserRole">
        INSERT ALL
        <foreach collection="roles" item="role">
        	INTO USER_AUTHORITY(USER_ID, AUTHORITY)
        	VALUES (#{userId},#{role})
        </foreach>
        SELECT 1 FROM DUAL
    </insert>
    <select id="findUserByUserId" resultMap="UserResult">
        SELECT id, email, name ,profile, password , authority
        FROM USERS U
        LEFT JOIN USER_CREDENTIALS UC ON U.ID = UC.USER_ID
        JOIN USER_AUTHORITY UA ON U.ID = UA.USER_ID
        WHERE U.ID = #{id}
    </select>
    <insert id="insertUserIdentities">
        INSERT INTO USER_IDENTITIES
        VALUES (SEQ_USER_IDENTITIES_ID.NEXTVAL,
        #{userId},#{accessToken},#{provider},#{providerUserId})
    </insert>
    <update id="updateUserIdentities">
        UPDATE USER_IDENTITIES SET
        ACCESS_TOKEN = #{accessToken}
        WHERE PROVIDER = #{provider}
        	AND PROVIDER_USER_ID = #{providerUserId}
    </update>
    <select id="getKakaoAccessToken" resultType="string">
        SELECT ACCESS_TOKEN
        FROM USER_IDENTITIES
        WHERE USER_ID = #{userId}
    </select>
</mapper>
